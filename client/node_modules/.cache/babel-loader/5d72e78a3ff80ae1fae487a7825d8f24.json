{"ast":null,"code":"var _jsxFileName = \"/Users/liemnguyen/Documents/onion/client/src/components/bag/bag.js\";\nimport { Input, Select } from 'antd';\nimport React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nconst BagComponent = () => {\n  const [totalBag, setTotalBag] = useState([{\n    id: 1\n  }]);\n\n  const addNewBag = e => {\n    const item = {\n      id: nanoid()\n    };\n    setTotalBag([...totalBag, item]);\n  };\n\n  console.log(totalBag);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary w-100 mb-3\",\n    onClick: () => addNewBag(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Th\\xEAm bao\"), totalBag.map((item, index) => /*#__PURE__*/React.createElement(FormCreateBag, {\n    key: index,\n    item: item,\n    totalBag: totalBag,\n    setTotalBag: setTotalBag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 46\n    }\n  })));\n};\n\nconst FormCreateBag = ({\n  item,\n  setTotalBag,\n  totalBag\n}) => {\n  const [valueForm, setValueForm] = useState({\n    type: 1,\n    kilo: 20,\n    size: 1\n  });\n\n  const changeType = value => {\n    setValueForm({ ...valueForm,\n      type: value\n    });\n    const index = totalBag.findIndex(bag => bag.id === item.id);\n    totalBag[index].type = value;\n    console.log(totalBag);\n    setTotalBag(totalBag);\n  };\n\n  const changeKilo = value => {\n    setValueForm({ ...valueForm,\n      kilo: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    size: \"large\",\n    defaultValue: 1,\n    onChange: () => changeType(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, BAG_LIST.map(item => /*#__PURE__*/React.createElement(Select.Option, {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, item.title)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    size: \"large\",\n    defaultValue: 2,\n    onChange: () => changeKilo(),\n    style: {\n      width: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, BAG_KILO_LIST.map(item => /*#__PURE__*/React.createElement(Select.Option, {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, item.title)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"S\\u1ED1 bao\",\n    size: \"large\",\n    value: valueForm.size,\n    onChange: e => setValueForm({ ...valueForm,\n      size: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default BagComponent;\nconst BAG_LIST = [{\n  id: 1,\n  title: 'Lớn'\n}, {\n  id: 2,\n  title: 'Trung'\n}, {\n  id: 3,\n  title: 'bi'\n}];\nconst BAG_KILO_LIST = [{\n  id: 1,\n  value: 30,\n  title: '30kg'\n}, {\n  id: 2,\n  value: 20,\n  title: '20kg'\n}, {\n  id: 3,\n  value: 10,\n  title: '10kg'\n}];","map":{"version":3,"sources":["/Users/liemnguyen/Documents/onion/client/src/components/bag/bag.js"],"names":["Input","Select","React","useState","nanoid","BagComponent","totalBag","setTotalBag","id","addNewBag","e","item","console","log","map","index","FormCreateBag","valueForm","setValueForm","type","kilo","size","changeType","value","findIndex","bag","changeKilo","BAG_LIST","title","width","BAG_KILO_LIST","target"],"mappings":"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","sourcesContent":["import { Input, Select } from 'antd'\nimport React, { useState } from 'react'\nimport {nanoid} from 'nanoid';\nconst BagComponent = () => {\n    const [totalBag, setTotalBag] = useState([\n        {\n            id : 1,\n        }\n    ])\n    const addNewBag = (e) =>{\n        const item = { id : nanoid() }\n        setTotalBag([...totalBag , item])\n    }\n    console.log(totalBag);\n    return (\n        <div>\n            <button className=\"btn btn-primary w-100 mb-3\" onClick={ () => addNewBag()}>Thêm bao</button>\n            {\n                totalBag.map((item,index) => <FormCreateBag key = {index} item = {item}  totalBag= {totalBag} setTotalBag={setTotalBag}/>)\n            }\n        </div>\n    )\n}\n\nconst FormCreateBag = ({item , setTotalBag ,totalBag}) => {\n    const [valueForm, setValueForm] = useState({\n        type : 1 ,\n        kilo : 20 ,\n        size : 1 ,\n    })\n    \n    const changeType = value =>{\n       setValueForm({...valueForm , type : value } )\n       const index =  totalBag.findIndex(bag => bag.id  === item.id)\n       totalBag[index].type = value\n       console.log(totalBag);\n       setTotalBag(totalBag)\n    }\n    const changeKilo = value =>{\n       setValueForm({...valueForm , kilo : value } )\n    }\n    return <div className=\"row\">\n                <div className=\"col-4\">\n                    <Select\n                        size=\"large\"\n                        defaultValue={1}\n                        onChange={()=>changeType()}\n                    >\n                        {BAG_LIST.map((item) => (\n                            <Select.Option key={item.id} value={item.id}>\n                                {item.title}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                </div>\n                <div className=\"col-4\">\n                    <Select\n                        size=\"large\"\n                        defaultValue={2}\n                        onChange={()=>changeKilo()}\n                        style ={{ width : '100px'}}\n                    >\n                        {BAG_KILO_LIST.map((item) => (\n                            <Select.Option key={item.id} value={item.id}>\n                                {item.title}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                </div>\n                <div className=\"col-4\">\n                    <Input\n                    placeholder='Số bao' \n                    size='large'\n                    value = {valueForm.size}\n                    onChange={e => setValueForm({...valueForm , size : e.target.value})}\n                    />\n                </div>\n            </div>\n}\nexport default BagComponent\nconst BAG_LIST = [\n    {\n        id: 1,\n        title: 'Lớn'\n    },\n    {\n        id: 2,\n        title: 'Trung'\n    },\n    {\n        id: 3,\n        title: 'bi'\n    }\n]\nconst BAG_KILO_LIST = [\n    {\n        id: 1,\n        value: 30,\n        title: '30kg'\n    },\n    {\n        id: 2,\n        value: 20,\n        title: '20kg'\n    },\n    {\n        id: 3,\n        value: 10,\n        title: '10kg'\n    }\n]"]},"metadata":{},"sourceType":"module"}