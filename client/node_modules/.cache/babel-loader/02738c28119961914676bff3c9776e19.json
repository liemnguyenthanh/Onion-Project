{"ast":null,"code":"import { LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nimport { showNotification } from '../helper';\nexport const loginAccount = user => async dispatch => {\n  try {\n    NotificationManager.info(\"a\");\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await api.login(user);\n    const {\n      success,\n      message\n    } = data;\n\n    if (success) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: message\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    showNotification({\n      type: 'error',\n      message: \"Error\",\n      title: \"Error\"\n    });\n  }\n};","map":{"version":3,"sources":["/Users/liemnguyen/Documents/onion/client/src/actions/account.js"],"names":["LOGIN_FAIL","LOGIN_REQUEST","LOGIN_SUCCESS","api","showNotification","loginAccount","user","dispatch","NotificationManager","info","type","data","login","success","message","payload","error","title"],"mappings":"AAAA,SAAUA,UAAV,EAAsBC,aAAtB,EAAqCC,aAArC,QAA0D,0BAA1D;AAEA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACFC,IAAAA,mBAAmB,CAACC,IAApB,CAAyB,GAAzB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACS,KAAJ,CAAUN,IAAV,CAAvB;AACA,UAAM;AAACO,MAAAA,OAAD;AAAWC,MAAAA;AAAX,QAAuBH,IAA7B;;AACA,QAAGE,OAAH,EAAW;AACTN,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAER,aAAR;AAAwBa,QAAAA,OAAO,EAAGD;AAAlC,OAAD,CAAR;AACD;AACF,GARD,CAQE,OAAOE,KAAP,EAAc;AACZT,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACAI,IAAAA,gBAAgB,CAAC;AAACM,MAAAA,IAAI,EAAE,OAAP;AAAgBI,MAAAA,OAAO,EAAE,OAAzB;AAAkCG,MAAAA,KAAK,EAAE;AAAzC,KAAD,CAAhB;AACH;AACF,CAbM","sourcesContent":["import {  LOGIN_FAIL, LOGIN_REQUEST, LOGIN_SUCCESS } from '../constants/actionTypes';\n \nimport * as api from '../api/index.js';\nimport { showNotification } from '../helper';\n\nexport const loginAccount = (user) => async (dispatch) => {\n  try {\n    NotificationManager.info(\"a\");\n    dispatch({ type: LOGIN_REQUEST });\n    const { data } = await api.login(user);\n    const {success , message } = data\n    if(success){\n      dispatch({ type: LOGIN_SUCCESS , payload : message });\n    }\n  } catch (error) {\n      dispatch({ type: LOGIN_FAIL });\n      showNotification({type: 'error', message: \"Error\", title: \"Error\"})\n  }\n};\n"]},"metadata":{},"sourceType":"module"}